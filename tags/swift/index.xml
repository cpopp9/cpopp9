<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Swift on Learning w/ Swift</title>
    <link>//coryjpopp.com/tags/swift/</link>
    <description>Recent content in Swift on Learning w/ Swift</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Nov 2022 09:03:20 -0800</lastBuildDate><atom:link href="//coryjpopp.com/tags/swift/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Adding Transparency to Sheets in SwiftUI</title>
      <link>//coryjpopp.com/posts/adding-transparency-to-sheets-in-swiftui/</link>
      <pubDate>Sun, 20 Nov 2022 09:03:20 -0800</pubDate>
      
      <guid>//coryjpopp.com/posts/adding-transparency-to-sheets-in-swiftui/</guid>
      <description>Native sheets in iOS are by default opaque, and require a bit of extra code to enable any form of transparency.
First we can create a new background view that conforms to UIViewRepresentable.
struct BackgroundClearView: UIViewRepresentable { func makeUIView(context: Context) -&amp;gt; UIView { let view = UIView() DispatchQueue.main.async { view.superview?.superview?.backgroundColor = .clear } return view } func updateUIView(_ uiView: UIView, context: Context) {} } And then we can use that transparent view as a background view within our sheet to enable transparency.</description>
    </item>
    
    <item>
      <title>How I Landed My First iOS Job</title>
      <link>//coryjpopp.com/posts/how-i-landed-my-first-ios-job/</link>
      <pubDate>Sun, 20 Nov 2022 09:03:20 -0800</pubDate>
      
      <guid>//coryjpopp.com/posts/how-i-landed-my-first-ios-job/</guid>
      <description>About a year ago I started learning swift with absolutely zero prior programming experience, and recently landed my first job.
I wanted to give back to this community and share my experience â€” what worked for me, and what didnâ€™t. Feel free to ask my anything or share your own insights.
Getting Started with iOS Paul Hudson has an excellent tutorial series calledÂ 100 Days of SwiftUIÂ that starts at the absolute beginning.</description>
    </item>
    
    <item>
      <title>Swipe to delete from lists in SwiftUI</title>
      <link>//coryjpopp.com/posts/swipe-to-delete-from-lists-in-swiftui/</link>
      <pubDate>Sun, 20 Nov 2022 09:03:20 -0800</pubDate>
      
      <guid>//coryjpopp.com/posts/swipe-to-delete-from-lists-in-swiftui/</guid>
      <description>SwiftUI includes a native solution for a swipe to delete function from within lists, which works exactly as you would expect with just a few lines of additional code.
The code itself is simple, and involves us creating a ForEach of our array within our list, and adding a .onDelete modifier to trigger the removeItems function that we have created below our view body.
ðŸ’¡ Itâ€™s important to note that our .</description>
    </item>
    
  </channel>
</rss>
